FROM node:12.8.0-alpine as dev

ARG POSTGRES_PASSWORD
ARG POSTGRES_DB
ARG POSTGRES_USER
ARG POSTGRES_HOST
ARG POSTGRES_PORT

ENV NODE_ENV=development
ENV POSTGRES_PASSWORD=$POSTGRES_PASSWORD
ENV POSTGRES_DB=$POSTGRES_DB
ENV POSTGRES_USER=$POSTGRES_USER
ENV POSTGRES_HOST=$POSTGRES_HOST
ENV POSTGRES_PORT=$POSTGRES_PORT

COPY package.json /usr/src/app/package.json
WORKDIR /usr/src/app

RUN npm i

COPY . .

RUN chmod +x wait-for-it.sh
RUN npm run build

EXPOSE 3000

ENTRYPOINT [ "docker-entrypoint.sh" ]
CMD npm run start:dev

FROM node:12.8.0-alpine as ci

ARG POSTGRES_PASSWORD
ARG POSTGRES_DB
ARG POSTGRES_USER
ARG POSTGRES_HOST
ARG POSTGRES_PORT

ENV NODE_ENV=production
ENV POSTGRES_PASSWORD=$POSTGRES_PASSWORD
ENV POSTGRES_DB=$POSTGRES_DB
ENV POSTGRES_USER=$POSTGRES_USER
ENV POSTGRES_HOST=$POSTGRES_HOST
ENV POSTGRES_PORT=$POSTGRES_PORT

WORKDIR /usr/src/app

COPY --from=dev /usr/src/app/dist ./dist
COPY --from=dev /usr/src/app/package.json .

RUN npm i --only=prod

ENTRYPOINT [ "docker-entrypoint.sh" ]
CMD npm run start:ci